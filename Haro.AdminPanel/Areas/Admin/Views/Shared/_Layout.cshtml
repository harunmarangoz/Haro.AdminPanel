@using Microsoft.AspNetCore.Hosting
@using Haro.AdminPanel.Common
@inject IHostingEnvironment _env

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors">
    <meta name="generator" content="Jekyll v4.1.1">
    <title>@App.Common.SiteInformation.ProjectName</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"/>
    <script src="https://kit.fontawesome.com/c39e1d7399.js"></script>
    @* <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script> *@
    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      @@media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }
      
      .admin-table tr td:last-child,
      .min{
          width: 1%;
          white-space: nowrap;
      }
      .nav-item .nav-item {
           padding-left: 15px;
       }
       .nav-item .nav-item .nav-link {
           font-weight: 400;
       }
       .loading-screen{
       background-color: #fff;
           position: fixed;
           width: 100%;
           height: 100%;
           top: 0;
           left: 0;
           z-index: 9998;
           display: -webkit-box;
           display: -webkit-flex;
           display: -ms-flexbox;
           display: flex;
           -webkit-box-align: center;
           -webkit-align-items: center;
           -ms-flex-align: center;
           align-items: center;
           -webkit-box-pack: center;
           -webkit-justify-content: center;
           -ms-flex-pack: center;
           justify-content: center;
           -webkit-touch-callout: none;
           user-select: none;
       }
    </style>
    <!-- Custom styles for this template -->
    <link href="/assets/css/dashboard.css" rel="stylesheet">
</head>
<body>
<nav class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
    <a class="navbar-brand col-md-3 col-lg-2 mr-0 px-3" href="#">@App.Common.SiteInformation.ProjectName</a>
    <ul class="navbar-nav px-3">
        <li class="nav-item text-nowrap">
            <a class="nav-link" asp-controller="User" asp-action="LogOut">Çıkış Yap</a>
        </li>
    </ul>
</nav>

<div class="container-fluid">
    <div class="row">
        @await Component.InvokeAsync("SideMenu")

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">
                    @(ViewBag.PageTitle == null ? "" : ViewBag.PageTitle)
                </h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    @RenderSection("topButton", false)
                    <div class="btn-group dropleft ml-2">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <img src="@App.Common.Language.Image" style="max-height: 20px"/>
                        </button>
                        <div class="dropdown-menu" style="min-width: 1rem;">
                            @foreach (var language in App.Common.Languages)
                            {
                                <a asp-controller="Home" asp-action="SetLanguage" asp-route-id="@language.Id" class="dropdown-item">
                                    <img src="@language.Image" style="max-height: 20px" />
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            @RenderBody()
        </main>
    </div>
</div>
<div id="loading-screen" class="loading-screen" style="display: none;">
    <div class="spinner-grow" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
<script>
$(document).ready(function () {
    //ConfirmLink
    $(".confirmLink").click(function (event) {
        var txt = "İşlemi gerçekleştirmek istediğinize emin misiniz?";
        var cnfrmTxt = $(this).data("confirm-text");
        if (cnfrmTxt) {
            txt = cnfrmTxt;
        }
        return confirm(txt);
    });
});
//Ajax Form
function ajaxFormBegin() {
    $("#loading-screen").show();
}

function ajaxFormSuccess(data) {
    if (data.Html) {
        $("#main-content").html(data.Html);
        if (data.Redirect) {
            window.history.pushState({"html": window.html, "pageTitle": window.pageTitle}, "", data.Redirect);
        }
        return;
    }
    if (data.Redirect) {
        if (data.Redirect === "reload") {
            location.reload();
            return;
        }
        location.href = data.Redirect;
    }
}

function ajaxFormFail(response) {
    var data = response.responseJSON;
    var form = $(this);
    console.log(form)
    if (form.find(".alert").length) {
        form.find(".alert").remove();
    }
    if (form.length) {
        form.prepend(createAlert(data.Message));
    } else {
        $(this).prepend(createAlert(data.Message));
    }
}

function ajaxFormComplete(response) {
    var data = response.responseJSON;
    $("#loading-screen").hide();
}

function createAlert(message, color = "danger", icon = "flaticon-warning") {
    return "<div class='alert alert-" + color + " errorAlert' role='alert'>" + message + "</div>";
}
</script>
<script>
    function camelCase(str) { 
        return str.turkishtoEnglish().replace(/(?:^\w|[A-Z]|\b\w)/g, function(word, index) 
        { 
            return word.toUpperCase(); 
        }).replace(/\s+/g, ''); 
    }
    String.prototype.turkishtoEnglish = function () {
        return this.replace(/Ğ/gim, "g")
            .replace(/Ü/gim, "u")
            .replace(/Ş/gim, "s")
            .replace(/I/gim, "i")
            .replace(/İ/gim, "i")
            .replace(/Ö/gim, "o")
            .replace(/Ç/gim, "c")
            .replace(/ğ/gim, "g")
            .replace(/ü/gim, "u")
            .replace(/ş/gim, "s")
            .replace(/ı/gim, "i")
            .replace(/ö/gim, "o")
            .replace(/ç/gim, "c");
    };
    function generateSeoUrl(textString) {
        textString = textString.replace(/ /g, "-");
        textString = textString.replace(/</g, "");
        textString = textString.replace(/>/g, "");
        textString = textString.replace(/"/g, "");
        textString = textString.replace(/é/g, "");
        textString = textString.replace(/!/g, "");
        textString = textString.replace(/’/, "");
        textString = textString.replace(/£/, "");
        textString = textString.replace(/^/, "");
        textString = textString.replace(/#/, "");
        textString = textString.replace(/$/, "");
        textString = textString.replace(/\+/g, "");
        textString = textString.replace(/%/g, "");
        textString = textString.replace(/½/g, "");
        textString = textString.replace(/&/g, "");
        textString = textString.replace(/\//g, "");
        textString = textString.replace(/{/g, "");
        //textString = textString.replace(/\(/g, "");
        textString = textString.replace(/\[/g, "");
        //textString = textString.replace(/\)/g, "");
        textString = textString.replace(/]/g, "");
        textString = textString.replace(/=/g, "");
        textString = textString.replace(/}/g, "");
        textString = textString.replace(/\?/g, "");
        textString = textString.replace(/\*/g, "");
        textString = textString.replace(/@@/g, "");
        textString = textString.replace(/€/g, "");
        textString = textString.replace(/~/g, "");
        textString = textString.replace(/æ/g, "");
        textString = textString.replace(/ß/g, "");
        textString = textString.replace(/;/g, "");
        textString = textString.replace(/,/g, "");
        textString = textString.replace(/`/g, "");
        textString = textString.replace(/|/g, "");
        textString = textString.replace(/\./g, "");
        textString = textString.replace(/:/g, "");
        textString = textString.replace(/İ/g, "i");
        textString = textString.replace(/I/g, "i");
        textString = textString.replace(/ı/g, "i");
        textString = textString.replace(/ğ/g, "g");
        textString = textString.replace(/Ğ/g, "g");
        textString = textString.replace(/ü/g, "u");
        textString = textString.replace(/Ü/g, "u");
        textString = textString.replace(/ş/g, "s");
        textString = textString.replace(/Ş/g, "s");
        textString = textString.replace(/ö/g, "o");
        textString = textString.replace(/Ö/g, "o");
        textString = textString.replace(/ç/g, "c");
        textString = textString.replace(/Ç/g, "c");
        textString = textString.replace(/–/g, "-");
        textString = textString.replace(/—/g, "-");
        textString = textString.replace(/—-/g, "-");
        textString = textString.replace(/—-/g, "-");
        textString = textString.split(/-+/).join("-");
        textString = trim(textString, '-');
        return textString.toLowerCase();
    }
    function trim(s, c) {
        if (c === "]") c = "\\]";
        if (c === "\\") c = "\\\\";
        return s.replace(new RegExp(
            "^[" + c + "]+|[" + c + "]+$", "g"
        ), "");
    }
</script>
@RenderSection("js", false)
</body>
</html>